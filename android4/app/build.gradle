buildscript {
    ext.kotlin_version = '1.3.72'
    repositories {
        mavenCentral()
        google()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

repositories {
    mavenCentral()
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'META-INF/main.kotlin_module'
    }

    kotlinOptions {
        jvmTarget = "1.8"
        freeCompilerArgs = ["-Xallow-result-return-type"]
    }

    defaultConfig {
        applicationId "org.blokada"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 414000002
        versionName "4.14.2"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        ndk {
            abiFilters 'arm64-v8a', 'armeabi-v7a', 'x86', 'x86_64'
        }
    }

    lintOptions {
        abortOnError false
    }

    buildTypes {
        debug {
            // By default it is a 'debuggable' build, signed with a debug key.
        }

        release {
            /**
             * Release builds are published on F-Droid and XDA Labs. They adhere to F-Droid
             * inclusion standards, which means they cannot contain any non-free software or
             * tracking, hence we can provide only limited support for them.
             */

            def f = rootProject.file('keystore.properties')
            if (f.exists()) {
                println "Release build will use Blokada keystore"
                Properties props = new Properties()
                InputStream inputStream = new FileInputStream(f)
                props.load(inputStream)
                inputStream.close()

                signingConfigs {
                    release {
                        storeFile rootProject.file(props['BLOKADA_KEY_PATH'])
                        storePassword props['BLOKADA_STORE_PASSWORD']
                        keyAlias 'blokada'
                        keyPassword props['BLOKADA_KEY_PASSWORD']
                    }
                }
                signingConfig signingConfigs.release
            }

            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        official {
            /**
             * Official builds are published on blokada.org and Google Play. They contain optional
             * reporting so we can provide better support and troubleshooting.
             */
            initWith(release)
            matchingFallbacks = ['release']
        }

        beta {
            // 'Beta' are builds used for internal and external beta testing.
            initWith(release)
            matchingFallbacks = ['release']
        }
    }

    // It needs to be defined in order for the flavor setup to work.
    flavorDimensions("model")

    productFlavors {
        full {
            // full is old package name for blokada.org that is being phased out.
            applicationId "org.blokada.origin.alarm"
        }

        fyra {
            // fyra lands on blokada.org.
            applicationId "org.blokada.fyra"
        }

        droid {
            // droid lands on F-Droid.
            applicationId "org.blokada.alarm"
        }

        /**
         * You can choose any of those modules in 'Build Variants' in Android Studio to work only on
         * selected modules or run only relevant test suites. You cannot actually run those modules
         * as apps. It is meant to help improve code separation as well as speed up development.
         */

        modCore {
            // modCore is included by all other Kotlin modules.
        }

        modG11n {
            /**
             * modG11n (Globalization) provides all i18n (internationalization) and l10n
             * (localization) functionality on top of what Android SDK provides.
             */
        }

        modTunnel {
            /**
             * Tunnel mod implements TUN/TAP tunneling (either with Wireguard or fake VPN) in
             * Kotlin. It also provides hosts lists filtering and has too much responsibility.
             */
        }
    }

    sourceSets {
        def srcCoreKotlin = 'src/core/kotlin'
        def srcCoreRes = 'src/core/res'
        def srcCoreMock = 'src/core/mock'
        def srcCoreTest = 'src/core/test'

        def srcFilterKotlin = 'src/filter/kotlin'

        def srcTunBlockaKotlin = 'src/tun-blocka/kotlin'
        def srcTunBlockaJni = 'src/tun-blocka/jniLibs'

        def srcTunLocalKotlin = 'src/tun-local/kotlin'
        def srcTunLocalTest = 'src/tun-local/test'

        def srcUiCoreKotlin = 'src/ui-core/kotlin'
        def srcUiCoreRes = 'src/ui-core/res'

        def srcUiBlokadaKotlin = 'src/ui-blokada/kotlin'
        def srcUiBlokadaRes = 'src/ui-blokada/res'

        def srcLegacyKotlin = 'src/legacy/kotlin'

        modCore.java.srcDirs += srcCoreKotlin
        testModCore.java.srcDirs += srcCoreTest

        modTunnel.java.srcDirs += srcCoreKotlin
        modTunnel.java.srcDirs += srcTunBlockaKotlin
        modTunnel.java.srcDirs += srcTunLocalKotlin

        testModTunnel.java.srcDirs += srcCoreTest
        testModTunnel.java.srcDirs += srcTunLocalTest

        full.manifest.srcFile 'src/full/AndroidManifest.xml'
        full.java.srcDirs += srcCoreKotlin
        full.java.srcDirs += srcTunLocalKotlin
        full.java.srcDirs += srcTunBlockaKotlin
        full.java.srcDirs += srcFilterKotlin
        full.java.srcDirs += srcUiCoreKotlin
        full.java.srcDirs += srcUiBlokadaKotlin
        full.java.srcDirs += srcLegacyKotlin
        full.java.srcDirs += 'src/full/kotlin'
        full.jniLibs.srcDirs += srcTunBlockaJni
        full.res.srcDirs += srcCoreRes
        full.res.srcDirs += srcUiCoreRes
        full.res.srcDirs += srcUiBlokadaRes
        full.res.srcDirs += 'src/full/res'
        testFull.java.srcDirs += srcCoreTest
        testFull.java.srcDirs += srcTunLocalTest
//        testfull.java.srcDirs += testModG11n.java.srcDirs
//        testfull.java.srcDirs += testModWireguard.java.srcDirs

        fyra.manifest.srcFile 'src/full/AndroidManifest.xml'
        fyra.java.srcDirs += srcCoreKotlin
        fyra.java.srcDirs += srcTunLocalKotlin
        fyra.java.srcDirs += srcTunBlockaKotlin
        fyra.java.srcDirs += srcFilterKotlin
        fyra.java.srcDirs += srcUiCoreKotlin
        fyra.java.srcDirs += srcUiBlokadaKotlin
        fyra.java.srcDirs += srcLegacyKotlin
        fyra.java.srcDirs += 'src/full/kotlin'
        fyra.jniLibs.srcDirs += srcTunBlockaJni
        fyra.res.srcDirs += srcCoreRes
        fyra.res.srcDirs += srcUiCoreRes
        fyra.res.srcDirs += srcUiBlokadaRes
        fyra.res.srcDirs += 'src/full/res'

        droid.manifest.srcFile 'src/full/AndroidManifest.xml'
        droid.java.srcDirs += srcCoreKotlin
        droid.java.srcDirs += srcTunLocalKotlin
        droid.java.srcDirs += srcTunBlockaKotlin
        droid.java.srcDirs += srcFilterKotlin
        droid.java.srcDirs += srcUiCoreKotlin
        droid.java.srcDirs += srcUiBlokadaKotlin
        droid.java.srcDirs += srcLegacyKotlin
        droid.java.srcDirs += 'src/full/kotlin'
        droid.jniLibs.srcDirs += srcTunBlockaJni
        droid.res.srcDirs += srcCoreRes
        droid.res.srcDirs += srcUiCoreRes
        droid.res.srcDirs += srcUiBlokadaRes
        droid.res.srcDirs += 'src/full/res'


        /**
         * Build types are cross combined with flavors to make a final release
         */

        debug.java.srcDirs += 'src/unofficial/kotlin'
        debug.manifest.srcFile 'src/ui-blokada/AndroidManifest.xml'
        release.java.srcDirs += 'src/official/kotlin'
        release.res.srcDirs += 'src/official/res'
        release.manifest.srcFile 'src/ui-blokada/AndroidManifest.xml'
        official.java.srcDirs += 'src/official/kotlin'
        official.res.srcDirs += 'src/official/res'
        official.manifest.srcFile 'src/ui-blokada/AndroidManifest.xml'
        beta.java.srcDirs += 'src/official/kotlin'
        beta.res.srcDirs += 'src/official/res'
        beta.manifest.srcFile 'src/ui-blokada/AndroidManifest.xml'
    }
}

dependencies {
    // Android support libraries
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.browser:browser:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.google.android.material:material:1.1.0'

    // Kotlin and its dependencies
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation 'com.github.salomonbrys.kodein:kodein:4.1.0'
    implementation 'nl.komponents.kovenant:kovenant-core:3.3.0'
    implementation 'nl.komponents.kovenant:kovenant-android:3.3.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:0.23.1'
//    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:x.y.z'
    implementation 'com.github.michaelbull:kotlin-result:1.0.8'
    implementation 'io.paperdb:paperdb:2.7.1'

    // Proxy
    implementation 'org.pcap4j:pcap4j-core:1.7.0'
    implementation 'org.pcap4j:pcap4j-packetfactory-propertiesbased:1.7.0'
    implementation 'dnsjava:dnsjava:2.1.8'
    implementation 'org.slf4j:slf4j-nop:1.6.1'

    // UI libraries
    implementation 'com.github.kar:AndroidSlidingUpPanel:4.1.0'
    implementation 'com.ramotion.foldingcell:folding-cell:1.2.3'
    implementation 'jp.wasabeef:blurry:3.0.0'
    implementation 'com.github.ps100000:PageIndicatorView:v1.0.4'
    implementation 'com.github.thibseisel:kdenticon-android:1.0.0-alpha5'
    implementation 'com.github.GwonHyeok:StickySwitch:0.0.16'

    // External integration (Tasker)
    implementation 'com.twofortyfouram:android-plugin-client-sdk-for-locale:4.0.3'

    // REST api
    def okhttpVersion = '3.14.9'
    def retrofitVersion = '2.9.0'
    implementation "com.squareup.okhttp3:okhttp:$okhttpVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttpVersion"
    implementation("com.squareup.retrofit2:retrofit:$retrofitVersion") {
        exclude module: 'okhttp'
    }
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"

    // Testing and debugging
    //def acraVersion = 'x.y.z'
    testImplementation 'junit:junit:4.13'
    androidTestImplementation('androidx.test.espresso:espresso-core:3.2.0', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
}
